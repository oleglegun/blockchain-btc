syntax = "proto3";

option go_package = "github.com/oleglegun/blockchain-btc/genproto";

import "google/protobuf/empty.proto";

service Node {
    rpc Handshake(NodeInfo) returns (NodeInfo);
    rpc HandleTransaction(Transaction) returns (google.protobuf.Empty);
}

message NodeInfo {
    string version = 1;
    int32 height = 2;
    // listenAddr is an address the node is listening on for connections.
    string listenAddr = 3;
    repeated string peerList = 4;
}

message Block {
    BlockHeader header = 1;
    repeated Transaction transactions = 2;
}

message BlockHeader {
    int32 version = 1;
    // Block height in the blockchain (sequential ID)
    int32 height = 2;
    // Hash of the previous block in the chain
    bytes prevHash = 3;
    // Merkle root hash of all transactions in this block
    bytes rootHash = 4;
    // Unix timestamp when the block was created
    int64 timestamp = 5;
}

message TxInput {
    // prevTxHash is the hash of the previous transaction that this input is spending from.
    bytes prevTxHash = 1;
    // prevTxOutIndex (UTXO id) is the index of the output in the previous transaction that this input is spending from.
    uint32 prevTxOutIndex = 2;
    bytes publicKey = 3;
    bytes signature = 4;
}

message TxOutput {
    int64 amount = 1;
    // Address of the recipient
    bytes address = 2;
}

message Transaction {  
    int32 version = 1;
    repeated TxInput inputs = 2;
    repeated TxOutput outputs = 3;
}